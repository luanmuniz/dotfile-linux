#!/bin/bash

e_header "Installing Essential"
sudo apt update && sudo apt install -y \
    build-essential \
    apt-transport-https \
    ca-certificates \
    openvpn \
    network-manager-openvpn \
    preload \
    zram-config

e_header "Installing Tools"
sudo apt update && sudo apt install -y \
    htop \
    openssh-server \
    curl \
    unzip \
    git \
    wine \
    nmap \
    telnet \
    tree \
    postgresql \
    dconf-tools

e_header "Installing Python & pip"
if has_not pip; then
    sudo apt update && sudo apt install -y python-pip python-dev
    sudo pip install --upgrade pip 
    sudo pip install --upgrade virtualenv
fi

e_header "Installing AWS CLI"
if has_not aws; then
    pip install --upgrade --user awscli
    aws --version
fi

e_header "Installing Docker"
if has_not docker; then
    sudo apt update && sudo apt install -y linux-image-extra-$(uname -r)
    sudo apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D
    sudo sh -c "echo 'deb https://apt.dockerproject.org/repo ubuntu-$(lsb_release -sc) main' | cat > /etc/apt/sources.list.d/docker.list"
    sudo apt update
    sudo apt purge lxc-docker
    sudo apt install -y docker-engine
    sudo service docker start
    sudo groupadd docker
    sudo usermod -aG docker $(id -un)
fi

e_header "Installing NVM & Node.js"
if has_not nvm; then
    curl -o- "https://raw.githubusercontent.com/creationix/nvm/v${NVM_VERSION}/install.sh" | bash 
    exec bash
    . ~/.bashrc
    nvm install v6
    nvm install v7
    nvm install v8
    nvm use v8
    nvm alias default v8
fi

e_header "Installing Yarn"
if has_not yarn; then
    curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
    echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
    sudo apt update && sudo apt install -y yarn
    yarn --version
fi

e_header "Installing NPM Global Modules"
npm i -g nodemon pm2

e_header "Installing Heroku Toolbelt"
if has_not heroku; then
    wget -qO- https://cli-assets.heroku.com/install-ubuntu.sh | sh
    heroku --version
fi
